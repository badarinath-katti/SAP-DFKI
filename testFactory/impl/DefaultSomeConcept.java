package testFactory.impl;

import testFactory.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultSomeConcept <br>
 * @version generated on Fri Sep 21 13:40:31 CEST 2018 by D065085
 */
public class DefaultSomeConcept extends WrappedIndividualImpl implements SomeConcept {

    public DefaultSomeConcept(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://www.semanticweb.org/d065085/ontologies/2018/8/untitled-ontology-77#dp1
     */
     
    public Collection<? extends Object> getDp1() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP1, Object.class);
    }

    public boolean hasDp1() {
		return !getDp1().isEmpty();
    }

    public void addDp1(Object newDp1) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP1, newDp1);
    }

    public void removeDp1(Object oldDp1) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP1, oldDp1);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/d065085/ontologies/2018/8/untitled-ontology-77#dp2
     */
     
    public Collection<? extends Object> getDp2() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP2, Object.class);
    }

    public boolean hasDp2() {
		return !getDp2().isEmpty();
    }

    public void addDp2(Object newDp2) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP2, newDp2);
    }

    public void removeDp2(Object oldDp2) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP2, oldDp2);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/d065085/ontologies/2018/8/untitled-ontology-77#dp3
     */
     
    public Collection<? extends Object> getDp3() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP3, Object.class);
    }

    public boolean hasDp3() {
		return !getDp3().isEmpty();
    }

    public void addDp3(Object newDp3) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP3, newDp3);
    }

    public void removeDp3(Object oldDp3) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DP3, oldDp3);
    }


}
